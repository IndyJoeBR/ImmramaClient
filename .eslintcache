[{"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\reportWebVitals.js":"1","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\App.js":"2","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\TopNavBar.jsx":"3","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\Footer.jsx":"4","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\index.js":"5","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\auth\\loginClass.jsx":"6","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\auth\\registerClass.jsx":"7","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\auth\\Auth.jsx":"8","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\helpers\\environment.jsx":"9","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\sections\\about.jsx":"10","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\Home.jsx":"11","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\Arrival.jsx":"12","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\ViewJourneys.jsx":"13","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\MyJourneys.jsx":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":3572,"mtime":1606941934903,"results":"17","hashOfConfig":"16"},{"size":5700,"mtime":1606942673576,"results":"18","hashOfConfig":"16"},{"size":496,"mtime":1606942227370,"results":"19","hashOfConfig":"16"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"16"},{"size":3903,"mtime":1606932957677,"results":"21","hashOfConfig":"16"},{"size":6416,"mtime":1606705418087,"results":"22","hashOfConfig":"16"},{"size":1128,"mtime":1606938954873,"results":"23","hashOfConfig":"16"},{"size":511,"mtime":1606763418199,"results":"24","hashOfConfig":"16"},{"size":2152,"mtime":1606144958405,"results":"25","hashOfConfig":"16"},{"size":613,"mtime":1606932123791,"results":"26","hashOfConfig":"16"},{"size":544,"mtime":1606940988294,"results":"27","hashOfConfig":"16"},{"size":1822,"mtime":1606942520300,"results":"28","hashOfConfig":"16"},{"size":7287,"mtime":1606968109970,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"j2v8y0",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\reportWebVitals.js",[],["64","65"],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\App.js",[],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\TopNavBar.jsx",["66","67","68"],"import React from 'react';\r\nimport {   Collapse,\r\n  Button,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  NavbarText } from 'reactstrap';\r\nimport { Link, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport navbarLogo from '../styles/assets/ImmramaLogo.png';\r\nimport '../styles/TopNavBar.css'\r\nimport Auth from  '../auth/Auth';\r\nimport Home from \"./Home\";\r\nimport ViewJourneys from \"./ViewJourneys\";\r\nimport ViewMyJourneys from \"./MyJourneys\";\r\nimport About from '../sections/about';\r\nimport ContactUs from '../sections/contactUs';\r\n\r\n\r\nclass TopNavBar extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.immramaLogout = this.immramaLogout.bind(this);\r\n    this.changeUserPassword = this.changeUserPassword.bind(this);\r\n\r\n    this.state = { navbarIsOpen: true };\r\n\r\n  };  //  end of constructor\r\n\r\n\r\n\r\n  toggleNavbar () {\r\n    this.setState( {navbarIsOpen: (!this.state.navbarIsOpen)} )\r\n\r\n/*    if(this.navbarIsOpen === true) {\r\n      console.log(\"closing navbar\");\r\n      this.setState( {navbarIsOpen: false} );\r\n    } else {\r\n      this.setState( {navbarIsOpen: true} );\r\n      console.log(\"opening navbar\");\r\n    }\r\n*/\r\n  };\r\n\r\n\r\n  immramaLogout() {\r\n    console.log(\"Starting logout\");\r\n    localStorage.clear();\r\n    this.props.setSessionToken(null);\r\n    this.props.setUserIsLoggedIn(false);\r\n    console.log(\"The state of sessionToken is now:\", this.props.token);\r\n    console.log(\"The state of userIsLoggedIn has been set to:\", this.props.userIsLoggedIn);\r\n    console.log(\"User is logged out.\")\r\n  };\r\n\r\n  changeUserPassword() {\r\n    console.log(\"Change password goes here - NO CODE - NOT FUNCTIONAL\");\r\n    // TODO  ---------  insert change password modal  ---------\r\n  };\r\n\r\n//  <Link to=\"/account\"><NavLink className=\"NavLink\" to=\"/account\">Account</NavLink></Link>\r\n//    or\r\n//  \r\n// Display component section\r\n/*\r\n  <Router>\r\n  anything you want to show up (all your components and all)\r\n\r\n    <Switch>\r\n      <Route>\r\n        <component props={props} />\r\n      </Route>\r\n      <Route>\r\n        <component props={props} />\r\n      </Route>\r\n    </Switch>\r\n  </Router>\r\n*/\r\n\r\n  render () {\r\n\r\n    console.log(\"**********   THIS IS THE NAVBAR   **********\")\r\n    console.log(\"this.user.isLoggedIn:\", this.props.userIsLoggedIn);\r\n    console.log(\"Username: \", this.props.username);\r\n    console.log(\"User is admin?\", this.props.userIsAdmin)\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Navbar light expand=\"md\" className=\"navbarBackground\" >\r\n\r\n        <NavbarBrand className=\"navbarBrandText\">\r\n          <img className=\"navbarLogo\" src={navbarLogo} alt=\"lion rampant from illuminated manuscript\" />\r\n          Immrama</NavbarBrand>\r\n\r\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.navbarIsOpen} navbar>\r\n            <Nav className=\"mr-auto\" navbar>\r\n              <NavItem>\r\n                <Button color=\"dark\"><Link to=\"/\">Home</Link></Button>{' '}\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button color=\"primary\"><Link to=\"/ViewJourneys\">Journeys</Link></Button>{' '}\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button color=\"primary\"><Link to=\"/ViewMyJourneys\">My Journeys</Link></Button>{' '}\r\n              </NavItem>\r\n              <NavItem>\r\n                  <Button color=\"info\"><Link to=\"/Sections/About\">About</Link></Button>{' '}\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button color=\"info\"><Link to=\"/Sections/ContactUs\">Contact Us</Link></Button>{' '}\r\n              </NavItem>\r\n            </Nav>\r\n            <UncontrolledDropdown inNavbar>\r\n\r\n                  <DropdownToggle nav caret className=\"accountContainer\" >\r\n                    Account\r\n                  </DropdownToggle>\r\n\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    <Button color=\"danger\" size=\"sm\" onClick={this.immramaLogout} >Logout</Button>\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    <Button color=\"warning\" size=\"sm\" onClick={this.changeUserPassword} >Change Password</Button>\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          </Collapse>\r\n        </Navbar>\r\n\r\n\r\n          <Redirect to=\"/\" />\r\n          <Switch>\r\n            <Route exact path=\"/ViewJourneys\">\r\n              <ViewJourneys \r\n                userIsLoggedIn={this.props.userIsLoggedIn}\r\n                username={this.props.username}\r\n                userIsAdmin={this.props.userIsAdmin}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/ViewMyJourneys\">\r\n              <ViewMyJourneys \r\n                userIsLoggedIn={this.props.userIsLoggedIn}\r\n                username={this.props.username}\r\n                userIsAdmin={this.props.userIsAdmin}\r\n              />\r\n            </Route>\r\n            <Route exact path=\"/Sections/About\">\r\n              <About />\r\n            </Route>\r\n            <Route exact path=\"/Sections/ContactUs\">\r\n              <ContactUs />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home \r\n                userIsLoggedIn={this.props.userIsLoggedIn}\r\n                username={this.props.username}\r\n                userIsAdmin={this.props.userIsAdmin}\r\n              />\r\n            </Route>\r\n          </Switch>\r\n\r\n      </div>\r\n\r\n    );  //  end of return\r\n\r\n  };  //  end of render\r\n\r\n\r\n};  //  end of Auth class\r\n\r\nexport default TopNavBar;","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\Footer.jsx",[],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\index.js",[],["69","70"],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\auth\\loginClass.jsx",[],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\auth\\registerClass.jsx",[],["71","72"],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\auth\\Auth.jsx",["73"],"//  ****************   NO LONGER USED   ******************\r\n//  Functionality moved to App.js ----  Delete this and \r\n//  Auth.css when definitely no longer needed.\r\n\r\nimport React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport RegisterClass from './registerClass';\r\nimport LoginClass from './loginClass';\r\nimport '../styles/auth.css';\r\n\r\nclass Auth extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  };\r\n\r\n  render () {\r\n\r\n    return (\r\n      <div className=\"AuthForms\">\r\n        <h3>Welcome to Immrama</h3>\r\n        <h4>Registration and login</h4>\r\n        <Container className=\"auth-container\">\r\n          <Row>\r\n            <Col md=\"6\" className=\"register-col\">\r\n              <RegisterClass setUserIsLoggedIn={this.props.setUserIsLoggedIn} />\r\n            </Col>\r\n            <Col md=\"6\" className=\"login-col\">\r\n             <LoginClass setUserIsLoggedIn={this.props.setUserIsLoggedIn} />\r\n            </Col>\r\n          </Row>\r\n       </Container>\r\n      </div>\r\n\r\n    );  //  end of return\r\n\r\n  };  //  end of render\r\n\r\n};  //  end of Auth class\r\n\r\n\r\nexport default Auth;","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\helpers\\environment.jsx",[],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\sections\\about.jsx",[],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\Home.jsx",["74"],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\Arrival.jsx",[],"C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\ViewJourneys.jsx",["75","76","77"],"import React from 'react';\r\nimport { Button, Container, Row, Col } from 'reactstrap';\r\nimport APIURL from \"../helpers/environment\";\r\n\r\n// *****  View Journeys requires no validation as it\r\n//        is available to all logged in users and\r\n//        only allows a user to read journeys.\r\n\r\nclass ViewJourneys extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.fetchAllJourneys = this.fetchAllJourneys.bind(this);\r\n    this.displayJourneyInCards = this.displayJourneyInCards.bind(this);\r\n\r\n    this.state = {\r\n\r\n    };\r\n\r\n  };    //  end of constructor\r\n\r\n\r\n  componentDidMount() {\r\n    console.log(\"View Journeys mounted.\");\r\n    console.log(`${APIURL}`);\r\n  };\r\n\r\n\r\n\r\n // https://immramaserver.herokuapp.com/journey/getAllJourneys\r\n\r\n\r\n fetchAllJourneys(e) {\r\n    e.preventDefault();\r\n\r\n    fetch(`${APIURL}/journey/getAllJourneys`, {\r\n      method: 'GET',\r\n      headers: new Headers( {'Content-Type': 'application/json'} )\r\n    })\r\n    .then( (response) => response.json() )\r\n    .then( (allJourneyData) => console.log(allJourneyData) )\r\n    .catch(err => console.log(err))\r\n  };  // end of fetchJourneys\r\n\r\n\r\n  displayJourneyInCards(allJourneys) {\r\n    console.log(\"Journeys sent for display:\", allJourneys);\r\n  }\r\n\r\n\r\n\r\n\r\n  render () {\r\n\r\n    console.log(\"**********   THIS IS VIEW ALL JOURNEYS   **********\")\r\n    console.log(\"this.user.isLoggedIn:\", this.props.userIsLoggedIn);\r\n    console.log(\"Username: \", this.props.username);\r\n    console.log(\"User is admin?\", this.props.userIsAdmin)\r\n\r\n\r\n    return (\r\n      <div>\r\n          Here you can view ALL journeys\r\n          <Button color=\"primary\" onClick={this.fetchAllJourneys} >Get All Journeys</Button>\r\n      </div>\r\n\r\n    );  //  end of return\r\n  };  //  end of render\r\n};  //  end of Auth class\r\n\r\nexport default ViewJourneys;","C:\\wd64-Sept2020\\projects\\immrama\\client\\src\\components\\MyJourneys.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":9,"column":3,"nodeType":"84","messageId":"85","endLine":9,"endColumn":10},{"ruleId":"82","severity":1,"message":"86","line":14,"column":3,"nodeType":"84","messageId":"85","endLine":14,"endColumn":13},{"ruleId":"82","severity":1,"message":"87","line":18,"column":8,"nodeType":"84","messageId":"85","endLine":18,"endColumn":12},{"ruleId":"78","replacedBy":"88"},{"ruleId":"80","replacedBy":"89"},{"ruleId":"78","replacedBy":"90"},{"ruleId":"80","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":13,"column":3,"nodeType":"94","messageId":"95","endLine":16,"endColumn":4},{"ruleId":"92","severity":1,"message":"93","line":6,"column":3,"nodeType":"94","messageId":"95","endLine":9,"endColumn":4},{"ruleId":"82","severity":1,"message":"96","line":2,"column":18,"nodeType":"84","messageId":"85","endLine":2,"endColumn":27},{"ruleId":"82","severity":1,"message":"97","line":2,"column":29,"nodeType":"84","messageId":"85","endLine":2,"endColumn":32},{"ruleId":"82","severity":1,"message":"98","line":2,"column":34,"nodeType":"84","messageId":"85","endLine":2,"endColumn":37},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'NavbarText' is defined but never used.","'Auth' is defined but never used.",["99"],["100"],["99"],["100"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]